% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rmacrolite.r
\docType{methods}
\name{rmacroliteApplications}
\alias{rmacroliteApplications}
\alias{rmacroliteApplications.macroParFile}
\alias{rmacroliteApplications<-}
\alias{rmacroliteApplications<-.macroParFile}
\title{Fetch or set the substance application rate and julian day in an imported MACRO par-file}
\usage{
rmacroliteApplications(x, ...)

\method{rmacroliteApplications}{macroParFile}(x, ...)

rmacroliteApplications( x, keep0conc = TRUE, ... ) <- value

\method{rmacroliteApplications}{macroParFile}(x, keep0conc = TRUE, ...) <- value
}
\arguments{
\item{x}{A \code{macroParFile}, as imported with 
\code{\link[rmacrolite]{rmacroliteImportParFile-methods}}}

\item{\dots}{Additional parameters passed to specific methods. 
Currently not used.}

\item{keep0conc}{A single logical value. When equal to \code{TRUE}, the 
default irrigation events with a zero concentration in 
the original par-file (\code{x}) will be kept as zero 
concentration and their application date and 
crop interception will not be altered either. 
When set to \code{FALSE} even irrigation events 
with a zero concentration in the original par-file are 
modified according to \code{value}.}

\item{value}{List with 3 named items: \code{g_as_per_ha}, 
\code{app_j_day} and \code{f_int}. New values of the substance 
application rate [g as/ ha], application time in Julian 
day and fraction of the sprayed quantity intercepted by 
the crop canopy [g as intercepted/ g as sprayed] to be 
set in the imported par-file (\code{x}). Here is an example 
R code to convert a date 
to Julian days: \code{format(as.Date("1901-10-01"),"\%j")}.
Each item should be a single numeric value or a vector of 
numeric values. When a single numeric value is passed, 
all relevant irrigation events are attributed the same 
parameter-value. When a vector of numeric values, it can 
either be as many values as relevant irrigations over the 
whole simulation period, or a number of irrigations that 
can be recycled over the whole simulation period. By 
relevant irrigation is meant irrigation events that 
have a non-zero concentration when \code{keep0conc} is 
\code{TRUE}, or all irrigation events when \code{keep0conc} 
is \code{FALSE}.}
}
\value{
A \code{\link{data.frame}} with 4 columns (all 
 numeric-values): \code{g_as_per_ha}, 
 \code{app_j_day}, \code{f_int} and \code{L_sprayer_per_ha}. 
 New value of the substance application rate [g as/ ha], the 
 application Julian day, fraction of the sprayed quantity 
 intercepted by the crop canopy [g as intercepted/ 
 g as sprayed] and the sprayer volume [L liquid/ha].
}
\description{
Fetch or set the substance application rate [g as/ ha], 
 julian day, sprayer volume [L liquid/ha] and 
 fraction of sprayed quantity intercepted on the crop canopy 
 [g as intercepted/ g as sprayed] in an imported MACRO 
 par-file. Calculated from MACRO parameters AMIR, CONCI, 
 IRRDAY and MASSUNITS.
}
\examples{

library( "rmacrolite" ) 

# # Setup MACRO directory (if needed)
# rmacroliteSetModelVar( "C:/swash/macro" )



# ==========================================================
# Example 1: MACRO In FOCUS simulation with a single annual 
#            application
# ==========================================================

#   Path to an example par-file
par_file_path_1appln <- system.file( "par-files", 
    "chat_winCer_GW-X_900gHa_d182.par", 
    package = "rmacrolite" ) 

#   Import the example par-file
par_file_1appln <- rmacroliteImportParFile( 
    file = par_file_path_1appln ) 



#   Fetch and inspect the current parametrization
out1 <- rmacroliteApplications( x = par_file_1appln ) 

unique( out1 ) 
      # g_as_per_ha app_j_day L_sprayer_per_ha f_int
    # 1         900       182             1000     0

nrow( out1 ) 
    # [1] 26



#   Copy the par-file and modify its application parameters
par_file_1appln_b <- par_file_1appln

rmacroliteApplications( x = par_file_1appln_b ) <- list(
    "g_as_per_ha"  = 999, 
    "app_j_day"    = 183, 
    "f_int"        = 0.01 ) 

#   Check
out1b <- rmacroliteApplications( x = par_file_1appln_b ) 

unique( out1b ) 
      # g_as_per_ha app_j_day L_sprayer_per_ha f_int
    # 1         999       183             1000  0.01

nrow( out1b ) 
    # [1] 26



#   Internal control
test_1 <- identical( 
    as.numeric( unlist( unique( out1b ) ) ), 
    c( 999, 183, 1000, 0.01 ) )   
if( !test_1 ){ 
    stop( "Example 1 of rmacroliteApplications()<- failed" ) } 

#   Clean-up
rm( par_file_path_1appln, par_file_1appln, par_file_1appln_b, 
    out1, out1b, test_1 )



# ==========================================================
# Example 2: MACRO In FOCUS simulation with two annual 
#            applications
# ==========================================================

#   Path to the example par-file
par_file_path_2appln <- system.file( "par-files", 
    "chat_winCer_GW-X_900gHa_d182_850gHa_d189_900gHa.par", 
    package = "rmacrolite" ) 

#   Import the example par-file
par_file_2appln <- rmacroliteImportParFile( 
    file = par_file_path_2appln ) 



#   Fetch and inspect the current parametrization
out2 <- rmacroliteApplications( x = par_file_2appln ) 

unique( out2 ) 
  # g_as_per_ha app_j_day L_sprayer_per_ha f_int
# 1         900       182             1000     0
# 2         850       189             1000     0

nrow( out2 ) 
    # [1] 52



#   Copy the par-file and modify its application parameters
par_file_2appln_b <- par_file_2appln

rmacroliteApplications( x = par_file_2appln_b ) <- list(
    "g_as_per_ha"  = c( 999, 899 ), 
    "app_j_day"    = c( 183, 190 ), 
    "f_int"        = 0.01 ) 

#   Check
out2b <- rmacroliteApplications( x = par_file_2appln_b ) 

unique( out2b ) 
  # g_as_per_ha app_j_day L_sprayer_per_ha f_int
# 1         999       183             1000  0.01
# 2         899       190             1000  0.01

nrow( out2b ) 
    # [1] 52



#   Internal control
test_2 <- identical( 
    as.numeric( unlist( unique( out2b ) ) ), 
    c( 999, 899, 183, 190, 1000, 1000, 0.01, 0.01 ) )   
if( !test_2 ){ 
    stop( "Example 2 of rmacroliteApplications()<- failed" ) } 

#   Clean-up
rm( par_file_path_2appln, par_file_2appln, par_file_2appln_b, 
    out2, out2b, test_2 )



# ==========================================================
# Example 3: MACRO In FOCUS simulation with a single biennial 
#            application
# ==========================================================

#   Path to the example par-file
par_file_path_biennial <- system.file( "par-files", 
    "chat_pot_GW-D_1kgHa_d119_biennial.par", 
    package = "rmacrolite" ) 

#   Import the example par-file
par_file_biennial <- rmacroliteImportParFile( 
    file = par_file_path_biennial ) 



#   Fetch and inspect the current parametrization
out3 <- rmacroliteApplications( x = par_file_biennial ) 

unique( out3 ) 
      # g_as_per_ha app_j_day L_sprayer_per_ha f_int
    # 1        1000       119             1000     0
    # 2           0         1             1000     0

nrow( out3 ) 
    # [1] 46



#   Copy the par-file and modify its application parameters
par_file_biennial_c <- par_file_biennial_b <- par_file_biennial

#   Variant 1: solute-free irriations are preserved
rmacroliteApplications( x = par_file_biennial_b ) <- list(
    "g_as_per_ha"  = 999, 
    "app_j_day"    = 183, 
    "f_int"        = 0.01 ) 

#   Check
out3b <- rmacroliteApplications( x = par_file_biennial_b ) 

unique( out3b ) 
  # g_as_per_ha app_j_day L_sprayer_per_ha f_int
# 1         999       183             1000  0.01
# 2           0         1             1000  0.00

nrow( out3b ) 
    # [1] 46

#   Internal control
test_3 <- identical( 
    as.numeric( unlist( unique( out3b ) ) ), 
    c( 999, 0, 183, 1, 1000, 1000, 0.01, 0.00 ) )   
if( !test_3 ){ 
    stop( "Example 3 of rmacroliteApplications()<- failed" ) } 



#   Variant 2: solute-free irrigations are not preserved
rmacroliteApplications( x = par_file_biennial_c, 
    keep0conc = FALSE ) <- list(
        "g_as_per_ha"  = c( 999,   1 ), 
        "app_j_day"    = c( 183,   2 ), 
        "f_int"        = c( 0.01,  0 ) ) 

#   Check
out3c <- rmacroliteApplications( x = par_file_biennial_c ) 

unique( out3c ) 
  # g_as_per_ha app_j_day L_sprayer_per_ha f_int
# 1         999       183             1000  0.01
# 2           1         2             1000  0.00

nrow( out3c ) 
    # [1] 46

#   Internal control
test_3c <- identical( 
    as.numeric( unlist( unique( out3c ) ) ), 
    c( 999, 1, 183, 2, 1000, 1000, 0.01, 0.00 ) )   
if( !test_3c ){ 
    stop( "Example 3c of rmacroliteApplications()<- failed" ) } 



#   Clean-up
rm( par_file_path_biennial, par_file_biennial, par_file_biennial_b, 
    out3, out3b, par_file_biennial_c, out3c, test_3, test_3c )

}
