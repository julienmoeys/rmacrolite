% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rmacrolite.r
\docType{methods}
\name{rmacroliteInfo}
\alias{rmacroliteInfo}
\alias{rmacroliteInfo.macroParFile}
\alias{rmacroliteInfo<-}
\alias{rmacroliteInfo<-.macroParFile}
\title{Fetch or set the INFORMATION section at the end of an imported MACRO par-file}
\usage{
rmacroliteInfo(x, ...)

\method{rmacroliteInfo}{macroParFile}(x, ...)

rmacroliteInfo( x, ... ) <- value

\method{rmacroliteInfo}{macroParFile}(x, ...) <- value
}
\arguments{
\item{x}{A \code{macroParFile}, as imported with 
\code{\link[rmacrolite]{rmacroliteImportParFile-methods}}, and 
preferably produced by MACRO In FOCUS.}

\item{\dots}{Additional parameters passed to specific methods. 
Currently not used.}

\item{value}{A named \code{\link[base]{list}} of character strings or 
integer. It should contain the items \code{"output_file"}, 
\code{"type"} and \code{"compound"} (each of these being 
a single character string), and optionally 
\code{"years_interval"} (a single integer). Name and path of 
the output file, type of simulation ("parent"; 
"parent, intermediate", "metabolite" or 
"metabolite, intermediate"), name of the compound 
parametrised in the par-file, and number of years in between 
application-years (1 for application(s) every year, 2 for 
application(s) every other year and 3 for application(s) 
every thord year), respectively.}
}
\value{
Vector of character strings named \code{"output_file"}, 
 \code{"type"} and \code{"compound"}. Name and path of 
 the output file, type of simulation ("parent"; 
 "parent, intermediate", "metabolite" or 
 "metabolite, intermediate") and name of the compound 
 parametrised in the par-file, respectively
}
\description{
Fetch or set the INFORMATION section at the end of an 
 imported MACRO par-file. Only relevant for par-files 
 produced by MACRO In FOCUS.
}
\examples{

library( "rmacrolite" ) 

# # Setup MACRO directory (if needed)
# rmacroliteSetModelVar( "C:/swash/macro" )



#   Path to an example par-file
par_file_path <- system.file( "par-files", 
    "chat_winCer_GW-X_900gHa_d182.par", 
    package = "rmacrolite" ) 

#   Import the example par-file
par_file <- rmacroliteImportParFile( 
    file = par_file_path ) 



#   Fetch the current information
#   Note: will only work on MACRO In FOCUS par-files
rmacroliteInfo( x = par_file ) 

                         # output_file 
    # "C:\\\\swash\\\\macro\\\\macro001.bin" 
                                # type 
                            # "parent" 
                            # compound 
                              # "GW-X"

#   Modify the parameter
par_file2 <- par_file

new_info <- list( 
    "output_file" = "C:/path/to/macro002.bin", 
    "type"        = "metabolite", 
    "compound"    = "GW-Z" )

rmacroliteInfo( x = par_file2 ) <- new_info 

#   NOTE: Only the meta-information are changed, not the 
#         actual parameters, so the example above is 
#         pointless.

#   Check the result
info <- rmacroliteInfo( x = par_file2 )
info 

if( !identical( new_info, info ) ){
    stop( "Test of rmacroliteInfo() failed" ) }

#   Clean-up
rm( par_file_path, par_file, par_file2, info, new_info  )

}
